[General]
network = TTEtherSim

**.ICP.phy[*].mac.address = "0A-00-00-00-00-01"

# Defines the running real-time application of ICP that generates TT traffic and receives RC traffic.
**.ICP.numApps = 1
**.ICP.app[0].typename = "TicApp"
# Connect the traffic generator output to the corresponding buffer.
**.ICP.app[0].buffers = "vl_100"
**.ICP.app[0].ct_id = 100
**.ICP.app[0].action_time = 12250tick

**.ICP.vl_100_ctc.receive_window_start = 12125tick
**.ICP.vl_100_ctc.receive_window_end = 12375tick
**.ICP.vl_100_ctc.permanence_pit = 12375tick
# Connect buffer of vl_100 to phy[0]
**.ICP.vl_100.destination_gates = "phy[0].TTin"
**.ICP.vl_100.ct_id = 100
# 12500 ticks result in action time of 1ms
**.ICP.vl_100.sendWindowStart = 12500tick

# Connect buffer of vl_101 to tteApp[0]
**.ICP.vl_101.destination_gates = "app[0].RCin"
**.ICP.vl_101.ct_id = 101
# 12500 ticks result in action time of 1ms

# Register the buffer of vl_100 as TT output traffic phy[0]
# This reserves the slots required for the corresponding TT messages
**.ICP.phy[0].shaper.tt_buffers = "vl_100"

# Connect the conformance checker for incoming TT traffic of vl_101 with phy[0]
# such that the corresponding TT messages will be put into the buffer at ppt.
**.ICP.phy[0].inControl.ct_incomings = "vl_101_ctc"